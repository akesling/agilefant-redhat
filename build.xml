<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="webapp" name="AgilEFant">
	
    <property file="build-user.properties"/>
	<property file="build.properties"/>
	<property file="conf/database-mysql5.properties"/>
	
    <target name="init" description="Initializes build script">
		<mkdir dir="${build.dir}"/>
    	<mkdir dir="${build.classes}"/>
    	<mkdir dir="${build.webapp}"/>
		<mkdir dir="${build.unit}"/>
    	<mkdir dir="${test.dir}"/>
    	<mkdir dir="${test.reports}"/>
    	<mkdir dir="${test.data}"/>
    	
        <path id="compile.classpath">
			<fileset dir="${lib}">
				<include name="*.jar"/>
				<include name="build/*.jar"/>
			</fileset>
		</path>

<!--    	<path id="compile.unit.classpath">
    		<path refid="compile.classpath"/>
			<path location="${build.classes}"/>
    	</path>-->

    	<path id="compile.unit.classpath">
    		<path refid="compile.classpath"/>
			<pathelement location="${build.classes}"/>
			<pathelement location="${build.unit}"/>
    		<pathelement location="${build.unit.classes}"/>
    	</path>

    	<path id="hibernatetoolslib">
    		<path refid="compile.classpath"/>
    		<fileset dir="${hibernatetools.dir}">
    			<include name="*.jar"/>
    		</fileset>
    		<path location="${build.classes}"/>
    	</path>
    	   
    	<taskdef name="hibernatetool"
    	         classname="org.hibernate.tool.ant.HibernateToolTask" 
    	         classpathref="hibernatetoolslib"/>
    	
    	<taskdef name="dbunit" 
    	    		classname="org.dbunit.ant.DbUnitTask"
    	    		classpathref="compile.classpath"/>
    	
    </target>
	
    <target name="compile" depends="init" description="Compiles source files">
		<javac debug="${javac.debug}" destdir="${build.classes}" srcdir="${src}">
        	<classpath refid="compile.classpath"/>
        	<!-- <compilerarg value="-Xlint:deprecation"/> -->
		</javac>
    </target>
	
	<target name="make-jar" depends="compile" description="Makes the jar file">
		<jar basedir="${build.classes}" includes="**" destfile="${jarFile}"/>	
	</target>
	
	<target name="create-db" depends="compile" description="Creates db using hibernate tools">
		<hibernatetool destdir="${build.dir}">
			<annotationconfiguration propertyfile="${conf.dir}/database-${database.type}.properties"
				configurationfile="${conf.dir}/hibernate.cfg.xml"/>
			<hbm2ddl export="${hbm2ddl.export}" outputfilename="create-db.ddl"/>
		</hibernatetool>
	</target>
	
	<target name="run-unit-tests" depends="compile-tests" description="Runs unit tests">	
	    <!--Hmm.. ainakin tuon WEB-INF:n tarvitsee, muista kopioista en varma -Touko -->
		<mkdir dir="${build.unit}/WEB-INF"/>
		<copy todir="${build.unit}/WEB-INF/">
	    	<fileset dir="${conf.dir}" excludes="database-*.properties"/>
		</copy>
		<copy tofile="${build.unit}/WEB-INF/database.properties">
			<fileset file="${conf.dir}/database-${database.type}.properties"/>
		</copy>
		<mkdir dir="${build.unit}/WEB-INF/lib/"/>
        <copy todir="${build.unit}/WEB-INF/lib/">
            <fileset dir="${lib}">
                <include name="*.jar"/>
                <include name="*.zip"/>
            </fileset>
        </copy>
		<mkdir dir="${test.reports}"/>
		<junit fork="true" dir="${build.unit}">
			<classpath refid="compile.unit.classpath"/>
			<formatter type="xml"/>
			<batchtest todir="${test.reports}">
				<fileset dir="${unit.src}">
					<include name="**/*.java"/>
					<exclude name="**/*SpringEnabledTestCase*.java"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="compile-tests" depends="webapp">
		<mkdir dir="${build.unit.classes}"/>
		<javac debug="${javac.debug}" destdir="${build.unit.classes}" srcdir="${unit.src}">
        	<classpath refid="compile.unit.classpath"/>
	        	<!-- <compilerarg value="-Xlint:deprecation"/> -->
		</javac>
	</target>

	<target name="drop-create-db" depends="compile" description="Creates db using hibernate tools">
		<hibernatetool destdir="${build.dir}">
			<annotationconfiguration propertyfile="${conf.dir}/database-${database.type}.properties"
				configurationfile="${conf.dir}/hibernate.cfg.xml"/>
			<hbm2ddl drop="true" export="${hbm2ddl.export}" outputfilename="create-db.ddl"/>
		</hibernatetool>
	</target>
	
	<target name="update-db" depends="compile" description="Creates db using hibernate tools">
		<hibernatetool destdir="${build.dir}">
			<annotationconfiguration propertyfile="${conf.dir}/database-${database.type}.properties"
				configurationfile="${conf.dir}/hibernate.cfg.xml"/>
			<hbm2ddl export="${hbm2ddl.export}" outputfilename="create-db.ddl" update="true"/>
		</hibernatetool>
	</target>
	
		
	<target name="webapp" depends="make-jar" description="Builds webapp">
        <copy includeEmptyDirs="true" todir="${build.webapp}">
            <fileset dir="${webapp.root}"/>
        </copy>
		<copy todir="${build.webapp}/WEB-INF/">
	    	<fileset dir="${conf.dir}" excludes="database-*.properties"/>
		</copy>
		<copy tofile="${build.webapp}/WEB-INF/database.properties">
			<fileset file="${conf.dir}/database-${database.type}.properties"/>
		</copy>
        <copy todir="${build.webapp}/WEB-INF/lib/">
            <fileset dir="${lib}">
                <include name="*.jar"/>
                <include name="*.zip"/>
            </fileset>
        </copy>
		<copy todir="${build.webapp}/WEB-INF/lib/">
			<fileset file="${jarFile}"/>
		</copy>
	</target>
	
	<target name="quick-ui-deploy" depends="init" description="Quickly deploys all jsp to server">
		<copy todir="${deploy.dir.local}/WEB-INF/jsp/">
			<fileset dir="${webapp.root}/WEB-INF/jsp/"/>
		</copy>	
	</target>
	
	<target name="deploy-local" depends="webapp" description="Deploys web app to local server">
		<mkdir dir="${deploy.dir.local}"/>
		<copy todir="${deploy.dir.local}">
			<fileset dir="${build.webapp}"/>			
		</copy>
		<touch file="${deploy.dir.local}/WEB-INF/web.xml"/>
	</target>
	
	<target name="clean" description="Removes build directory">
        <delete dir="${build.dir}"/>
    	<delete dir="${test.reports}"/>		
	</target>
	
	<target name="set-original-db" depends="init" description="Updates the database, with default values from the XML file">
		<dbunit driver="${hibernate.connection.driver_class}"         
			url="${hibernate.connection.url}"          
			userid="${hibernate.connection.username}"          
			password="${hibernate.connection.password}">
		    <classpath refid="compile.classpath"/>    	
		    <operation type="CLEAN_INSERT" src="${testdata.dir}/testData.xml" format="xml"/>
		</dbunit>
	</target>
	
	<target name="export-db" depends="init" description="Exports the database into an XML file">
		<dbunit driver="${hibernate.connection.driver_class}"         
					url="${hibernate.connection.url}"
					userid="${hibernate.connection.username}"          
					password="${hibernate.connection.password}">    
		    <export dest="${build.test}/exportedData.xml" format="xml"/>
		</dbunit>
	</target>
	
	<target name="import-db" depends="init" description="Imports the database from an XML file">
		<dbunit driver="${hibernate.connection.driver_class}"
					url="${hibernate.connection.url}"
					userid="${hibernate.connection.username}"
					password="${hibernate.connection.password}">
		    <export dest="${build.test}/exportedData.xml" format="xml"/>
		</dbunit>
	</target>

	<target name="count-loc">
		<exec executable="/bin/sh">
			<arg value="${basedir}/tools/count-loc.sh"/>
		</exec>
	</target>
</project>
