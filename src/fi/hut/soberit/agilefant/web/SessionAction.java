package fi.hut.soberit.agilefant.web;

import java.util.Collection;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

import com.opensymphony.xwork.ActionContext;
import com.opensymphony.xwork.ActionSupport;

import fi.hut.soberit.agilefant.business.MenuBusiness;
import fi.hut.soberit.agilefant.db.BacklogDAO;
import fi.hut.soberit.agilefant.model.Backlog;
import fi.hut.soberit.agilefant.util.MenuData;
import fi.hut.soberit.agilefant.web.page.PageItem;

/**
 * The action class for populating the lefthand menu.
 * 
 * @author rjokelai
 */
public class SessionAction extends ActionSupport {
    
    private String contextType = "";
    private Integer objectId;
    
    /**
     * Open a dialog by ajax request.
     * @return
     */
    @SuppressWarnings("unchecked")
    public String ajaxOpenDialog() {
        Collection<Integer> openDialogs = null;
        
        /* Get the data from session */
        try {
            openDialogs = (Collection<Integer>)ActionContext.getContext().getSession().get(contextType);
        }
        catch (Exception e) {
            return CRUDAction.AJAX_ERROR;
        }
        
        /* Create, if doesn't exist */
        if (openDialogs == null) {
            openDialogs = new HashSet<Integer>();
        }
        
        openDialogs.add(objectId);
        
        /* Save to session */
        ActionContext.getContext().getSession().put(contextType, openDialogs);
        
        return CRUDAction.AJAX_SUCCESS;
    }
    
    /**
     * Close a dialog by ajax request.
     * @return
     */
    @SuppressWarnings("unchecked")
    public String ajaxCloseDialog() {
        Collection<Integer> openDialogs = null;
        
        /* Get the data from session */
        try {
            openDialogs = (Collection<Integer>)ActionContext.getContext().getSession().get(contextType);
        }
        catch (Exception e) {
            return CRUDAction.AJAX_ERROR;
        }
        
        /* Create, if doesn't exist */
        if (openDialogs == null) {
            return CRUDAction.AJAX_SUCCESS;
        }
        
        openDialogs.remove(objectId);
        
        /* Save to session */
        ActionContext.getContext().getSession().put(contextType, openDialogs);
        
        return CRUDAction.AJAX_SUCCESS;
    }

    /*
     * Autogenerated list of getters and setters
     */
    
    public String getContextType() {
        return contextType;
    }

    public void setContextType(String contextType) {
        this.contextType = contextType;
    }

    public Integer getObjectId() {
        return objectId;
    }

    public void setObjectId(Integer objectId) {
        this.objectId = objectId;
    }
    
}
