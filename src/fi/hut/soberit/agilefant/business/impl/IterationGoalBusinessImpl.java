package fi.hut.soberit.agilefant.business.impl;

import fi.hut.soberit.agilefant.business.IterationGoalBusiness;
import fi.hut.soberit.agilefant.db.IterationGoalDAO;
import fi.hut.soberit.agilefant.exception.ObjectNotFoundException;
import fi.hut.soberit.agilefant.model.Iteration;
import fi.hut.soberit.agilefant.model.IterationGoal;
import flexjson.JSONSerializer;

public class IterationGoalBusinessImpl implements IterationGoalBusiness {

    private IterationGoalDAO iterationGoalDAO;

    /** {@inheritDoc} */
    public void moveToTop(IterationGoal iterGoal) {
        // Raise priority number for every
        iterationGoalDAO.raiseRankBetween(0, iterGoal.getPriority(), iterGoal
                .getIteration());

        iterGoal.setPriority(0);
    }

    /** {@inheritDoc} */
    public void moveUp(IterationGoal iterGoal) {
        IterationGoal next = iterationGoalDAO
                .findFirstHigherRankedIterationGoal(iterGoal);

        if (next != null) {
            swapRanks(iterGoal, next);
        }
    }

    /** {@inheritDoc} */
    public void moveDown(IterationGoal iterGoal) {
        IterationGoal next = iterationGoalDAO
                .findFirstLowerRankedIterationGoal(iterGoal);

        if (next != null) {
            swapRanks(iterGoal, next);
        }
    }

    /** {@inheritDoc} */
    public void moveToBottom(IterationGoal iterGoal) {
        IterationGoal lowestRankedIterationGoal = iterationGoalDAO
                .getLowestRankedIterationGoalInIteration(iterGoal.getIteration());
        
        if (lowestRankedIterationGoal == null ||
                lowestRankedIterationGoal.getId() == iterGoal.getId()) {
            return;
        } else {
            iterGoal.setPriority(lowestRankedIterationGoal.getPriority() + 1);
        }
    }
    
    /** {@inheritDoc} */
    public int getNewPriorityNumber(Iteration iteration) {
        int newId = 1;
        
        // Fetch the lowest ranked iteration goal
        IterationGoal ig = iterationGoalDAO
                .getLowestRankedIterationGoalInIteration(iteration);
        
        // If there is an iteration goal, return it's priority number + 1
        if (ig != null) {
            newId = ig.getPriority() + 1;
        }
        
        return newId;
    }

    /**
     * Swap the ranks of two iteration goals
     * 
     * @param ig1
     * @param ig2
     */
    private void swapRanks(IterationGoal ig1, IterationGoal ig2) {
        Integer originalIg1Rank = new Integer(ig1.getPriority());
        Integer originalIg2Rank = new Integer(ig2.getPriority());

        ig1.setPriority(originalIg2Rank);
        ig2.setPriority(originalIg1Rank);
    }
    
    /** {@inheritDoc} */
    public String iterationGoalToJSON(int iterationGoalId)
            throws ObjectNotFoundException {
        return iterationGoalToJSON(iterationGoalDAO.get(iterationGoalId));
    }
    
    
    /** {@inheritDoc} */
    public String iterationGoalToJSON(IterationGoal iterGoal)
        throws ObjectNotFoundException {
        if (iterGoal == null) {
            throw new ObjectNotFoundException();
        }
        /*String json = "{";
        json += "name:'" + JSONUtils.stringToJSON(iterGoal.getName()) + "',";
        json += "id:" + iterGoal.getId() + ",";
        json += "iterationId:" + iterGoal.getIteration().getId() + ",";
        json += "description:'" + JSONUtils.stringToJSON(iterGoal.getDescription()) + "'";
        json += "}";*/
        return new JSONSerializer().serialize(iterGoal);
    }
    /*
     * AUTOGENERATED LIST OF SETTERS AND GETTERS
     */

    public void setIterationGoalDAO(IterationGoalDAO iterationGoalDAO) {
        this.iterationGoalDAO = iterationGoalDAO;
    }

}
